name: Patch Mikrotik RouterOS 7.x
on:
  # push:
  #   branches: [ "main" ]
  # schedule:
  #   - cron: "0 0 * * *"
  workflow_dispatch:

permissions:
  contents: write

env:
  CUSTOM_LICENSE_PRIVATE_KEY: ${{ secrets.CUSTOM_LICENSE_PRIVATE_KEY }}
  CUSTOM_LICENSE_PUBLIC_KEY: ${{ secrets.CUSTOM_LICENSE_PUBLIC_KEY }}
  CUSTOM_NPK_SIGN_PRIVATE_KEY: ${{ secrets.CUSTOM_NPK_SIGN_PRIVATE_KEY }}
  CUSTOM_NPK_SIGN_PUBLIC_KEY: ${{ secrets.CUSTOM_NPK_SIGN_PUBLIC_KEY }}
  CUSTOM_CLOUD_PUBLIC_KEY: ${{ secrets.CUSTOM_CLOUD_PUBLIC_KEY }}
  MIKRO_LICENSE_PUBLIC_KEY: ${{ secrets.MIKRO_LICENSE_PUBLIC_KEY }}
  MIKRO_NPK_SIGN_PUBLIC_LKEY: ${{ secrets.MIKRO_NPK_SIGN_PUBLIC_LKEY }}
  MIKRO_CLOUD_PUBLIC_KEY: ${{ secrets.MIKRO_CLOUD_PUBLIC_KEY }}
  MIKRO_LICENCE_URL: ${{ secrets.MIKRO_LICENCE_URL }}
  CUSTOM_LICENCE_URL: ${{ secrets.CUSTOM_LICENCE_URL }}
  MIKRO_UPGRADE_URL: ${{ secrets.MIKRO_UPGRADE_URL }}
  CUSTOM_UPGRADE_URL: ${{ secrets.CUSTOM_UPGRADE_URL }}
  MIKRO_RENEW_URL: ${{ secrets.MIKRO_RENEW_URL }}
  CUSTOM_RENEW_URL: ${{ secrets.CUSTOM_RENEW_URL }}
  MIKRO_CLOUD_URL: ${{ secrets.MIKRO_CLOUD_URL }}
  CUSTOM_CLOUD_URL: ${{ secrets.CUSTOM_CLOUD_URL }}

jobs:
  Set_BuildTime:
    runs-on: ubuntu-22.04
    outputs:
      BUILD_TIME: ${{ steps.set_buildtime.outputs.BUILD_TIME }}
    steps:
      - name: Set build time
        id: set_buildtime
        run: echo "BUILD_TIME=$(date +'%s')" >> $GITHUB_OUTPUT

  Patch_RouterOS:
    needs: Set_BuildTime
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        arch: [mmips]
        channel: [stable]
    env:
      TZ: 'Asia/Shanghai'
      LATEST_VERSION: "7.16.2"
      ARCH: "mmips"

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
        
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11' 

    - name: Patch routeros-${{ env.LATEST_VERSION }}-${{ env.ARCH }}.npk
      # if: steps.get_latest.outputs.has_new_version == 'true'
      run: |
        sudo wget -nv -O routeros-$LATEST_VERSION-$ARCH.npk https://download.mikrotik.com/routeros/$LATEST_VERSION/routeros-$LATEST_VERSION-$ARCH.npk
        sudo -E python3 patch.py npk routeros-$LATEST_VERSION-$ARCH.npk

    - name: Patch all_packages-${{ env.LATEST_VERSION }}-${{ env.ARCH }}.zip
      run: |
        # https://download.mikrotik.com/routeros/7.16.1/all_packages-mmips-7.16.1.zip
        sudo wget -nv -O all_packages-$ARCH-$LATEST_VERSION.zip https://download.mikrotik.com/routeros/$LATEST_VERSION/all_packages-$ARCH-$LATEST_VERSION.zip
        sudo mkdir ./all_packages
        sudo unzip all_packages-$ARCH-$LATEST_VERSION.zip -d ./all_packages
        NPK_FILES=$(find ./all_packages/*.npk)
        for file in $NPK_FILES; do
            sudo -E python3 npk.py sign $file $file
        done

        cd ./all_packages
        sudo zip ../all_packages-$ARCH-$LATEST_VERSION.zip *.npk
        cd ..

    - name: Create Release tag ${{ env.LATEST_VERSION }} ${{ matrix.arch }}
      # if: steps.get_latest.outputs.has_new_version == 'true'
      uses: softprops/action-gh-release@v2
      with:
        name: "RouterOS ${{ env.LATEST_VERSION }} ${{ matrix.arch }}"
        tag_name: ${{ env.LATEST_VERSION }}-${{ env.ARCH }}
        files: |
          routeros-${{ env.LATEST_VERSION }}-${{ env.ARCH }}.npk
          all_packages-*-*.zip

